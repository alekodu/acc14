#cloud-config

apt_sources:
 - source: "ppa:fenics-packages/fenics"
 
packages:
 - python3-pip
 - gmsh

locale: en_US.UTF-8

write_files:
 - path: /home/ubuntu/proj/tasks.py
   content: |
     from celery import Celery
     import subprocess
     celery = Celery(
         'tasks',
         broker='pyamqp://myuser:mypassword@$LIP:5672/myvhost',
         backend='rpc://myuser:mypassword@$LIP:5672/myvhost'
     )
     celery.conf.task_serializer = 'json'
     celery.conf.task_compression = 'gzip'
     @celery.task()
     def one_angle(
         angle, naca1, naca2, naca3, naca4, nodes, refinements,
         samples, viscosity, speed, time
     ):
         filename = angle + '_' + nodes + '_' + naca1 + naca2 + naca3 + naca4 + '.geo'
         # create geo file
         with open("results/geo/" + filename, 'w') as geo_fh:
             subprocess.run(
                 [
                     "/home/ubuntu/acc14/bin/cloudnaca/naca2gmsh_geo.py",
                     angle, naca1, naca2, naca3, naca4, nodes
                 ],
                 stdout=geo_fh
             )
         # create mesh file
         msh_name = filename[:-3] + "msh"
         subprocess.run([
             "gmsh", "-v", '0', '-nopopup', '-2', '-o', "results/msh/"+msh_name, "results/geo/"+filename
         ])
         # refine mesh file
         for _ in range(int(refinements)):
             subprocess.run(["gmsh", "-refine", "-v", "0", "results/msh/"+msh_name])
         # convert mesh file to xml
         xml_name = filename[:-3] + "xml"
         subprocess.run([
             "dolfin-convert", "-i", "gmsh", "-o", "xml",
             "results/msh/" + msh_name, "results/xml/" + xml_name
         ])
         # run airfoil on xml file
         subprocess.run(
             [
                 "/home/ubuntu/acc14/bin/airfoil/airfoil",
                 samples, viscosity, speed, time, "../../results/xml/" + xml_name
             ],
             cwd="/home/ubuntu/acc14/bin/airfoil"
         )
         # read in and return result
         with open("/home/ubuntu/acc14/bin/airfoil/results/drag_ligt.m") as f:
             lines = f.read().splitlines()
         return lines

runcmd:
 - apt --assume-yes install --no-install-recommends fenics
 - pip3 install numpy celery
 - sudo -u ubuntu git clone https://github.com/harpaj/acc14.git
 - cd /home/ubuntu/proj
 - celery -A tasks.celery worker --loglevel=INFO &
